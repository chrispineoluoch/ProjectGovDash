@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using Microsoft.AspNetCore.Mvc.Rendering;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Identity
@using ProjectGovDash.Models;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IPagedList<ProjectGovDash.Models.DSHSurvey.DSHSurvey>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    @using (Html.BeginForm("Index", "DSHSurveys", FormMethod.Get))
    {
        <div class="input-group mb-3 m-auto">
            <input type="text" name="Searchterm" id="Searchterm" class="form-control search-tab rounded-start-pill" placeholder="Find survey data by typing here ..." aria-label="Recipient's username" aria-describedby="button-addon2">
            <button class="btn btn-warm rounded-end-pill" type="submit" id="button-addon2">Search</button>
        </div>
    }

    @{ int rowNo = 0; }
    <table class="table table-hover table-view">
        <thead>
            <tr>
                <th>
                    SN
                </th>
                <th>
                    Region
                </th>
                <th>
                    County
                </th>
                <th>
                    Date of Survey
                </th>
                <th>
                    Last Mile Sites
                </th>
                <th>
                    Distance of Last Mile
                </th>
                <th>
                    Distance of Metro
                </th>
                <th>
                    Distance of Backbone
                </th>
                @if (SignInManager.IsSignedIn(User))
                {
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @(rowNo += 1).
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Region)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.County)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateofSurvey)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NoLastMileSites)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DistanceLastMile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DistanceMetro)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DistanceBackbone)
                    </td>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <div class="card-view">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card Page-input-card-index mb-4 shadow bg-light">
                        <div class="card-body">

                            <h5 class="text-warm_light fs-5 fw-normal mb-4">
                                Date @item.DateofSurvey
                            </h5>
                            <div class="mt-3">
                                <p class="card-text mb-1">Region: @Html.DisplayFor(modelItem => item.Region)</p>
                                <p class="card-text mb-1">County: @Html.DisplayFor(modelItem => item.County)</p>
                                <p class="card-text mb-1">Number of Last Mile Sites: @Html.DisplayFor(modelItem => item.NoLastMileSites)</p>
                                <p class="card-text mb-1">Distance of Last Mile: @Html.DisplayFor(modelItem => item.DistanceLastMile)</p>
                                <p class="card-text mb-1">Distance of Metro: @Html.DisplayFor(modelItem => item.DistanceMetro)</p>
                                <p class="card-text mb-1">Distance of Backbone: @Html.DisplayFor(modelItem => item.DistanceBackbone)</p>
                            </div>
                            @if (SignInManager.IsSignedIn(User))
                            {
                                <div class="mt-3">
                                    <a href="@Url.Action("Edit", "Profiles", new { id = item.Id })" class="btn btn-warm rounded-pill d-inline-block me-12 mb-1">Edit details</a>
                                </div>
                            }
                            </div>
                    </div>
                </div>
            }
        </div>
    </div>


    @{
        var searchterm = ViewContext.HttpContext.Request.Query["Searchterm"];
    }

    <div>
        @Html.PagedListPager(Model, page =>
            Url.Action("Index", new
                {
                    page = page,
                Searchterm = searchterm
            }),
            new PagedListRenderOptions
            {
                UlElementClasses = new string[] { "pagination pagination-xs pagination-gutter pagination-warning" },
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
                LinkToPreviousPageFormat = "Previous",
                LinkToNextPageFormat = "Next",
                ClassToApplyToLastListItemInPager = "page-previus",
                ClassToApplyToFirstListItemInPager = "page-next"
            })
    </div>
</div>
